scalar Date
scalar ObjectId

enum UserRole {
  user
  admin
  moderator
  dev
}

enum SortOrder {
  ASC
  DESC
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

# Nanogram

type PaginatedNanogram {
  items: [Nanogram!]!
  pageInfo: PageInfo!
}

type Nanogram {
  _id: ObjectId!
  name: String!
  role: String!
  content: String
  avatarId: String
  avatarUrl: String
  linkedin: String
  github: String
  instagram: String
  alumini: Boolean!
  core: Boolean!
  priority: Int!
}

# User

type PaginatedUsers {
  items: [User!]!
  pageInfo: PageInfo!
}

type User {
  _id: ObjectId!
  userId: String!
  username: String!
  firstName: String!
  lastName: String!
  fullName: String!
  email: String!
  bio: String
  avatarUrl: String
  karma: Int
  role: UserRole
  posts: [ObjectId!]
  likedPosts: [ObjectId!]
  savedPosts: [ObjectId!]
  following: [ObjectId!]
  followers: [ObjectId!]
  comments: [ObjectId!]
  likedComments: [ObjectId!]
  createdAt: Date!
  updatedAt: Date!
}

# Posts

type PaginatedPosts {
  items: [Post!]!
  pageInfo: PageInfo!
}

type Post {
  _id: ObjectId!
  creator: User!
  caption: String!
  tags: [String]
  imageId: String
  imageUrl: String
  source: String
  savedBy: [ObjectId]
  likes: [ObjectId]
  comments: [ObjectId]
  createdAt: Date!
  updatedAt: Date!
}

# Queries and Mutations

type Query {
  nanograms(
    _idArray: [ObjectId]
    name: String
    alumini: Boolean
    core: Boolean
    sort: String
    order: SortOrder
    first: Int
    after: String
  ): PaginatedNanogram!
  nanogram(_id: ObjectId, name: String): Nanogram
  users(
    _idArray: [ObjectId]
    userId: String
    username: String
    name: String
    role: UserRole
    sort: String
    order: SortOrder
    first: Int
    after: String
  ): PaginatedUsers!
  user(userId: String, username: String, name: String, _id: ObjectId): User
  posts(
    _idArray: [ObjectId]
    creator: ObjectId
    sort: String
    order: SortOrder
    first: Int
    after: String
  ): PaginatedPosts!
  post(_id: ObjectId!): Post
}

type Mutation {
  createNewUser(
    userId: String!
    username: String!
    firstName: String!
    lastName: String!
    fullName: String!
    email: String!
    bio: String
    avatarUrl: String
  ): User!
}
